plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

version = '1.0'
group = 'divinerpg.divinerpg-compat'
archivesBaseName = 'divinerpg_compat'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.19.3'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'divinerpg_compat'
            mods {
                divinerpg_compat {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'divinerpg_compat'
            mods {
                divinerpg_compat {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'divinerpg_compat'
            mods {
                divinerpg_compat {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'divinerpg_compat', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                divinerpg_compat {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = "https://minecraft.curseforge.com/api/maven/"}
    maven { url = "https://dvs1.progwml6.com/files/maven/"}
    maven { url = "https://modmaven.dev"}
    maven { url = "https://www.cursemaven.com"}
    maven { url 'https://maven.blamejared.com'}
    maven { url "https://maven.shedaniel.me" }
    maven { url = uri("https://maven.architectury.dev/") }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.3-44.1.0'
    compileOnly fg.deobf("curse.maven:official-divinerpg-363543:4205686") //DivineRPG
    runtimeOnly fg.deobf("curse.maven:official-divinerpg-363543:4205686") //DivineRPG

    runtimeOnly fg.deobf("curse.maven:jade-324717:4199865") //Jade
    compileOnly fg.deobf("mezz.jei:jei-1.19.3-common-api:12.0.2.2") //Just Enough Items
    compileOnly fg.deobf("mezz.jei:jei-1.19.3-forge-api:12.0.2.2") //Just Enough Items
    runtimeOnly fg.deobf("mezz.jei:jei-1.19.3-common:12.0.2.2") //Just Enough Items
    runtimeOnly fg.deobf("mezz.jei:jei-1.19.3-forge:12.0.2.2") //Just Enough Items
    runtimeOnly fg.deobf("curse.maven:cucumber-272335:4284311") // Cucumber
    runtimeOnly fg.deobf("curse.maven:mysticalagriculture-246640:4284321") // Mystical Agriculture
    runtimeOnly fg.deobf("curse.maven:mysticalcustomization-280441:4284327") // Mystical Customization
    runtimeOnly fg.deobf("curse.maven:resource-pandas-410681:4229230") // Resource Pandas
//    runtimeOnly fg.deobf("curse.maven:advanced-mining-dimension-332640:4162790") // Advanced mining dimension

    // Integrated Dynamics Optional Dependency
    runtimeOnly(fg.deobf("curse.maven:common_capabilities-247007:4344657"))
    runtimeOnly(fg.deobf("curse.maven:cyclops_core-232758:4357257"))
    runtimeOnly(fg.deobf("curse.maven:integrated_dynamics-236307:4357274"))
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "divinerpg_compat",
                "Specification-Vendor"    : "TeamDivineRPG",
                "Specification-Version"   : "1.0",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "TeamDivineRPG",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
